#ifndef __XC7022_CONFIG_H__
#define __XC7022_CONFIG_H__

/*
基本流程 ：IMX291(MIPI)→ XC7022(MIPI)→ 平台
1.平台需要给XC7022及IMX291上电，提供MCLK（input clock,6MHZ＜MCLK＞27MHZ),拉高XC7022 RESET
2.XC7022 I2C Addr ：write 0x36，Read 0x37
3.XC7022 Chip ID 读取
XC7022_read(0xfffb);
XC7022_read(0xfffc);
对应值
0xfffb=0x71 
0xfffc=0x60

4.初始化XC7022
通过I2C写<XC7022_default_regs>寄存器  I2C addr: 0x36 ,16bit addr 8bit vale

5.打开I2C旁路功能
通过I2C写<bypass_on>寄存器  I2C addr: 0x36 ,16bit addr 8bit vale

6切换I2C地址访问IMX291;初始化IMX291
通过I2C写<IMX291_default_regs>寄存器 I2C addr: 0x34 ,16bit addr 8bit vale

7.关闭I2C旁路功能，
通过I2C写<bypass_off>寄存器  I2C addr: 0x36 ,16bit addr 8bit vale

8.输出1920x1080 yuv422数据,

//修改0x0090寄存器由0x38改成0x3a 可以出XC7022测试彩条,可以用来测试XC7022与平台数据传输是否正常。

//以下为设置部分
*/

#if 0
#define COLOR_BAR_PATTERN
#endif

typedef struct _regval_list{
		unsigned int reg;
		unsigned char val;
}regval_list_t;

#define ARRAY_SIZE(arr) \
   (sizeof(arr) / sizeof(((typeof(arr)){})[0]))

regval_list_t bypass_on[] = {
0xfffd,0x80,
0xfffe,0x50,
0x004d,0x01,

};

regval_list_t bypass_off[] = {
0xfffd,0x80,
0xfffe,0x50,
0x004d,0x00,

};


regval_list_t IMX291_default_regs[] = {
		
0x3016,0x9, //03
//add 0x3017,0x77,  A5
0x3000,0x1, 
0x3002,0x0, 
0x3005,0x0, 
//ad 0x3007,0x0,  00
0x300A,0x6,
0x300F,0x0, 
0x3010,0x21,
//add 0x3012,0x64,  F0
0x3016,0x9, 
0x3020,0x2, 
0x3024,0xC9,
0x3030,0x0B,
0x3046,0x00,
0x304B,0x0A,
0x305C,0x18,
0x305D,0x3, 
0x305E,0x20,
0x305F,0x1, 
0x3070,0x2, 
0x3071,0x11,
0x309B,0x10,
0x309C,0x22,
0x30A2,0x2, 
0x30A6,0x20,
0x30A8,0x20,
0x30AA,0x20,
0x30AC,0x20,
0x30B0,0x43,
//add 0x3106,0x11,  00
0x3119,0x9E,
0x311C,0x1E,
0x311E,0x8, 
0x3128,0x5, 
0x3129,0x1D,
0x313D,0x83,
0x3150,0x3, 
0x315E,0x1A,
0x3164,0x1A,
0x317C,0x12,
0x317E,0x0, 
0x31EC,0x37,
0x32B8,0x50,
0x32B9,0x10,
0x32BA,0x0, 
0x32BB,0x4, 
0x32C8,0x50,
0x32C9,0x10,
0x32CA,0x0, 
0x32CB,0x4, 
0x332C,0xD3,
0x332D,0x10,
0x332E,0x0D,
0x3358,0x6, 
0x3359,0xE1,
0x335A,0x11,
0x3360,0x1E,
0x3361,0x61,
0x3362,0x10,
0x33B0,0x50,
0x33B2,0x1A,
0x33B3,0x4, 
0x3405,0x10,
0x3407,0x1, 
0x3441,0x0A,
0x3442,0x0A,
0x3443,0x1, 
0x3444,0x20,
0x3445,0x25,
0x3446,0x57,
0x3448,0x37,
0x344A,0x1F,
0x344C,0x1F,
0x344E,0x1F,
0x3450,0x77,
0x3452,0x1F,
0x3454,0x17,
0x3480,0x49,
0x3000,0x0, 
0x3418,0x53,
			
};

regval_list_t XC7022_default_regs[] = {
	
//XC7022_Initial_start

0xfffd, 0x80,
0xfffe, 0x50,

0x001c, 0xff,
0x001d, 0xff,
0x001e, 0xff,
0x001f, 0xff,
0x0018, 0x00,
0x0019, 0x00,
0x001a, 0x00,
0x001b, 0x00,
0x00bc, 0x19,

0x0030, 0x44,
0x0031, 0x34,
0x0032, 0x62,
0x0033, 0x70,
0x0020, 0x01,
0x0021, 0x09,
0x0022, 0x01,
0x0023, 0x85,
0x0024, 0x03,
0x0025, 0x05,
0x0026, 0x01,
0x0027, 0x06,
0x0028, 0x01,
0x0029, 0x00,
0x002a, 0x01,
0x002b, 0x05,
0x002e, 0x02,

0xfffe,0x50,
0x0050,0x13,  
0x0054,0x13,
0x0058,0x11,  
0x0058,0x10,
0x0058,0x12,  

0xfffe,0x50,
#ifdef COLOR_BAR_PATTERN
0x0090, 0x3a,	//0x3a: output a color bar pattern
#else
0x0090, 0x38,
#endif


0xfffe, 0x26,

0x8000, 0x1d,
0x8001, 0x80,
0x8002, 0x07,
0x8003, 0x38,
0x8004, 0x04,
0x8010, 0x09,
0x8012, 0x80,
0x8013, 0x07,
0x8014, 0x38,
0x8015, 0x04,
0x8016, 0x09,
0x8017, 0x00,
0x8018, 0x02,
0x8019, 0x00,

0xfffe, 0x30,
0x1900, 0x00,
0x1901, 0x00,
0x1902, 0x00,
0x1903, 0x00,
0x1904, 0x07,
0x1905, 0x80,
0x1906, 0x04,
0x1907, 0x38,
0x1908, 0x00,

0xfffe, 0x2c,

0x0000, 0x00,
0x0001, 0x07,
0x0002, 0x80,
0x0004, 0x04,
0x0005, 0x38,
0x0008, 0x10,
0x0044, 0x08,
0x0045, 0x04,
0x0048, 0x0E,
0x0049, 0xF0,

0xfffe, 0x26,

0x2019, 0x07,
0x201a, 0x80,
0x201b, 0x04,
0x201c, 0x38,
0x201d, 0x00,
0x201e, 0x00,
0x201f, 0x00,
0x2020, 0x00,

0x2015, 0x81,
0x2017, 0x1E,
0x2018, 0x00,
0x2023, 0x00,

0x0000, 0x20,
0x0009, 0xc4,

0xfffe, 0x30,

0x0000, 0x01,
0x0001, 0x00,
0x0002, 0x10,
0x0003, 0x20,
0x0004, 0x10,
0x0050, 0x20,
0x0019, 0x08,
0x005e, 0x7F,
0x005f, 0x07,
0x0060, 0x37,
0x0061, 0x04,
0x0064, 0x80,
0x0065, 0x07,
0x0066, 0x38,
0x0067, 0x04,

0x0006, 0x07,
0x0007, 0x80,
0x0008, 0x04,
0x0009, 0x38,
0x000a, 0x07,
0x000b, 0x80,
0x000c, 0x04,
0x000d, 0x38,



0xfffe,0x50,
0x004d,0x01,
0x0226,0x02, //RX2 off

0xfffe,0x30,   // AE_avg

0xfffe,0x30,   // AE_avg
0x1f00,0x00,   // WIN start X
0x1f01,0x00,
0x1f02,0x00,   // WIN stat Y
0x1f03,0x30,
0x1f04,0x07,   // WIN width
0x1f05,0x80,
0x1f06,0x04,   // WIN height
0x1f07,0x08,
0x1f08,0x03,
0x0051,0x3,   // ae统计数据选择，gamma后
/////////////////////////////////////////////////////
///////////////////// 2.  AE SENSOR     /////////////
/////////////////////////////////////////////////////
0xfffe,0x14,
0x010e,0x34,  	//camera i2c id
0x010f,0x01,  	//camera i2c bits
0x0110,0x05,  	//sensor type gain
0x0111,0x05,  	//sensor type exposure


//exposure
0x0114,0x30,  //write camera exposure variable [19:16]
0x0115,0x22,
0x0116,0x30,  //write camera exposure variable [15:8]
0x0117,0x21,
0x0118,0x30,  //write camera exposure variable [7:0]
0x0119,0x20,


0x011c,0x00,  //camera exposure addr mask 1
0x011d,0xff,      
0x011e,0x00,  //camera exposure addr mask 2
0x011f,0xff,
0x0120,0x00,  //camera exposure addr mask 3
0x0121,0xff,


//gain
0x0134,0x30,  //camera gain addr0
0x0135,0x14,

0x013c,0x00,  //camera gain addr mask 0
0x013d,0xff,

0x0145,0x00,  //gain delay frame

0x0031,0x01,    //effect in arith end
0x0032,0x01,    //effect in arith end

0x0212,0x60,
0x0215,0x60,
0x0219,0x60,

0xfffe,0x14,
0x0145,0x00, //gain delay frame

0x00c6,0x00,     // delay frame
/////////////////////////////////////////////////////
////////////////// 3.  AE NORMAL     ////////////////
/////////////////////////////////////////////////////  
0xfffe,0x14,  

0x004c,0x00,	//0 SW process  1 manual
0x002b,0x01,  //ae enable
0x004d,0x01,  //ae Force write 

0x00fa,0x04,   //max gain        64x
0x00fb,0xff,  

0x00fc,0x00,
0x00fd,0x20,  //min gain

0x00e2,0x3b,  //max exp line    0xd520 =10fps ,0x9530 =15fps,0x6a90 =20fps    0x5540=25fps
0x00e3,0xd0,   

0x00de,0x00,
0x00df,0x10,  //min exp line 

0x00a0,0x01,  //day target
0x00a1,0xc0,

//flicker
0x0104,0x02,  //0 desable  1 60Hz  2 50Hz
0x0105,0x01,  //Min FlickerLines Enable
0x0108,0x13,  //50Hz 
0x0109,0xf0,   

//weight
0x0055,0x04,
0x0056,0x04,
0x0057,0x04,
0x0058,0x04,
0x0059,0x04,

0x005a,0x04,
0x005b,0x04,
0x005c,0x04,
0x005d,0x04,
0x005e,0x04,

0x005f,0x10,
0x0060,0x20,
0x0061,0x20,
0x0062,0x20,
0x0063,0x10,

0x0064,0x10,
0x0065,0x40,
0x0066,0x40,
0x0067,0x40,
0x0068,0x10,

0x0069,0x04,
0x006a,0x10,
0x006b,0x10,
0x006c,0x10,
0x006d,0x04,    //权重for CurAvg

0x0088,0x00,
0x0089,0xe7,
0x008a,0x00,
0x008b,0x00,  //关注区域 for 亮块

0x0050,0x01,   //refresh

/////////////////////////////////////////////////////
///////////////////  4.AE SPEED       ///////////////
/////////////////////////////////////////////////////
0x00ca,0x00,  //thr_low	60
0x00cb,0x80,

0x00cc,0x00,  //thr_high	80
0x00cd,0xa0,

0x01bc,0x00,  //thr_l_all
0x01bd,0x60,  //thr_l_all	50

0x01be,0x00,  //thr_l_avg
0x01bf,0x50,  //thr_l_avg	40

0x00c7,0x20,  //3. finally thrL	18
0x00d8,0x80,  //4. stable thr_h

0x00c8,0x00,  //total speed
0x0208,0x02,  //speed limit factor

0x00da,0x00,    // LumaDiffThrLow
0x00db,0xa0,

0x00dc,0x03,    // LumaDiffThrHigh
0x00dd,0x00,

/////////////////////////////////////////////////////
///////////////////  5.AE SMART       ///////////////
/////////////////////////////////////////////////////
0x0092,0x01,  //smart mode
0x0093,0x07,  //0x07 //0x15  //analysis mode+zhifangtu
0x0094,0x00,  //smart speed limit//打开会造成震荡

///////////////////table reftarget//////////////////
0x0022,0x1e,  //use cur fps

0x01e4,0x00,   // Exp value Table 
0x01e5,0x00,
0x01e6,0x11,
0x01e7,0x80,  //table0     1/4 max exp*1 gain

0x01e8,0x00,                                                   
0x01e9,0x00,                    
0x01ea,0x23,                    
0x01eb,0x40,   //table1     1/2 max exp*1 gain            

0x01ec,0x00,                    
0x01ed,0x00,                    
0x01ee,0x42,                    
0x01ef,0x80,    //table2     max exp*1 gain             

0x01f0,0x00,                    
0x01f1,0x00,                    
0x01f2,0x84,                     
0x01f3,0xc0,    //table3      max exp*2 gain               

0x01f4,0x00,                    
0x01f5,0x01,                    
0x01f6,0x09,                    
0x01f7,0x80,   //table4      max exp*4 gain             

0x01f8,0x00,                      
0x01f9,0x02,                    
0x01fa,0x13,                    
0x01fb,0x40,  //table5       max exp*8 gain  

///////////////////reftarget/////////////////////////
0x00b2,0x01,   // ref target table  0可更改的目标亮度    //240
0x00b3,0x88, 
0x00b4,0x01,   // ref target table  1                    //220
0x00b5,0x38, 
0x00b6,0x00,   // ref target table  2                    //200
0x00b7,0xd8, 
0x00b8,0x00,   // ref target table  3                    //1e0
0x00b9,0x88, 
0x00ba,0x00,   // ref target table  4                    //1b0
0x00bb,0x90, 
0x00bc,0x00,   // ref target table  5
0x00bd,0x90, 

//基于平均亮度维度分?
0x01cd,0x28,//avg affect val
0x01cb,0x00,//avg thr_l
0x01cc,0x40,  //avg thr_h


////////////////////////over exposure offest/////////
0x01d6,0x00,   
0x01d7,0x08, 
0x01d8,0x80, 
0x01d9,0xc0, 
0x01da,0x70, 
0x01db,0x60,

0x00c0,0x30,     //HistHighThr_1
0x00c1,0x34,    //HistHighThr_2
0x01c0,0x08,   //PDF USE CNT 08
0x01c7,0x08,   //PDFH_max 04
0x01c9,0x00,   //PDFH_target 00
0x01ca,0x38,  //40
0x01d1,0x48,  //50

//基于方差维度分析模式/Variance  /////////////////
0x01b1,0x30,  // variance affect

0x01b2,0x01,  // thr l
0x01b3,0x00,
0x01b4,0x06,  // thr h
0x01b5,0x00,

//基于关注区亮度压制
//0x00ab,0x03,   //min avg cnt
//0x00ac,0x03,   //max avg cnt
0x00ad,0x02,   //ATT block Cnt   关注区域亮块数算平均

0x016e,0x02,
0x016f,0x40,  //%%%%%%%Max ATT thrshold关注区域的门限值

0x01d3,0x00,   // no use Att limit ratio L
0x01d4,0x20,   // %%%%%Att limit ratio L关注区域的调整值

0x016c,0x00,   //min att thr
0x016d,0x00,   //min att thr

//0x01ba,0x8,   //Bright Ratio2

////////////////////////smart ae end ///////////////

0x1a74,0x00,//2frame write
0x0212,0x60,//ae chufa menxian

//atuo lenc

0xfffe,0x30,
0x0000,0x01,
0x0002,0x96,

0xfffe,0x30,	  //lenc scale
0x03ca,0xC,	           
0x03cb,0xCC,	        
0x03cc,0x16,	         
0x03cd,0xC1,	        
0x03ce,0xC,	           
0x03cf,0xCC,	        
0x03d0,0xB,	           
0x03d1,0x60,	        


0xfffe,0x14,

0x002c,0x01,
0x0030,0x01,
0x0620,0x01,	
0x0621,0x01,	

0xfffe,0x14,	
0x0928,0x0,	
0x0929,0x57,  //A	
0x092a,0x0,	
0x092b,0x96,  //C	
0x092c,0x1,	
0x092d,0x18,	//D


0x06e5,0xc ,  //A2 _88,2017410
0x06e6,0x8 ,  
0x06e7,0x7 ,  
0x06e8,0x7 ,  
0x06e9,0x7 ,  
0x06ea,0x9 ,  
0x06eb,0xd ,  
0x06ec,0x1d,  
0x06ed,0x2 ,  
0x06ee,0x2 ,  
0x06ef,0x1 ,  
0x06f0,0x1 ,  
0x06f1,0x1 ,  
0x06f2,0x2 ,  
0x06f3,0x3 ,  
0x06f4,0x5 ,  
0x06f5,0x1 ,  
0x06f6,0x0 ,  
0x06f7,0x0 ,  
0x06f8,0x0 ,  
0x06f9,0x0 ,  
0x06fa,0x1 ,  
0x06fb,0x1 ,  
0x06fc,0x3 ,  
0x06fd,0x0 ,  
0x06fe,0x0 ,  
0x06ff,0x0 ,  
0x0700,0x1 ,  
0x0701,0x1 ,  
0x0702,0x1 ,  
0x0703,0x1 ,  
0x0704,0x1 ,  
0x0705,0x0 ,  
0x0706,0x0 ,  
0x0707,0x0 ,  
0x0708,0x1 ,  
0x0709,0x1 ,  
0x070a,0x1 ,  
0x070b,0x1 ,  
0x070c,0x1 ,  
0x070d,0x1 ,  
0x070e,0x0 ,  
0x070f,0x0 ,  
0x0710,0x1 ,  
0x0711,0x1 ,  
0x0712,0x1 ,  
0x0713,0x1 ,  
0x0714,0x3 ,  
0x0715,0x3 ,  
0x0716,0x2 ,  
0x0717,0x1 ,  
0x0718,0x1 ,  
0x0719,0x1 ,  
0x071a,0x2 ,  
0x071b,0x4 ,  
0x071c,0x5 ,  
0x071d,0xb ,  
0x071e,0x8 ,  
0x071f,0x7 ,  
0x0720,0x7 ,  
0x0721,0x7 ,  
0x0722,0x9 ,  
0x0723,0xc ,  
0x0724,0x18,  
0x0725,0x20,  
0x0726,0x20,  
0x0727,0x20,  
0x0728,0x20,  
0x0729,0x20,  
0x072a,0x20,  
0x072b,0x1f,  
0x072c,0x1e,  
0x072d,0x20,  
0x072e,0x20,  
0x072f,0x21,  
0x0730,0x21,  
0x0731,0x21,  
0x0732,0x21,  
0x0733,0x20,  
0x0734,0x20,  
0x0735,0x20,  
0x0736,0x21,  
0x0737,0x21,  
0x0738,0x21,  
0x0739,0x21,  
0x073a,0x21,  
0x073b,0x21,  
0x073c,0x20,  
0x073d,0x20,  
0x073e,0x21,  
0x073f,0x21,  
0x0740,0x21,  
0x0741,0x21,  
0x0742,0x21,  
0x0743,0x20,  
0x0744,0x21,  
0x0745,0x20,  
0x0746,0x21,  
0x0747,0x21,  
0x0748,0x21,  
0x0749,0x21,  
0x074a,0x21,  
0x074b,0x20,  
0x074c,0x21,  
0x074d,0x20,  
0x074e,0x20,  
0x074f,0x20,  
0x0750,0x20,  
0x0751,0x20,  
0x0752,0x20,  
0x0753,0x20,  
0x0754,0x21,  
0x0755,0x20,  
0x0756,0x20,  
0x0757,0x20,  
0x0758,0x20,  
0x0759,0x20,  
0x075a,0x20,  
0x075b,0x20,  
0x075c,0x20,  
0x075d,0x1f,  
0x075e,0x1f,  
0x075f,0x20,  
0x0760,0x1f,  
0x0761,0x1f,  
0x0762,0x1f,  
0x0763,0x1d,  
0x0764,0x21,  
0x0765,0x21,  
0x0766,0x21,  
0x0767,0x21,  
0x0768,0x21,  
0x0769,0x21,  
0x076a,0x21,  
0x076b,0x21,  
0x076c,0x1d,  
0x076d,0x21,  
0x076e,0x22,  
0x076f,0x22,  
0x0770,0x21,  
0x0771,0x21,  
0x0772,0x22,  
0x0773,0x22,  
0x0774,0x22,  
0x0775,0x22,  
0x0776,0x21,  
0x0777,0x20,  
0x0778,0x20,  
0x0779,0x20,  
0x077a,0x21,  
0x077b,0x21,  
0x077c,0x21,  
0x077d,0x20,  
0x077e,0x20,  
0x077f,0x1f,  
0x0780,0x1f,  
0x0781,0x1f,  
0x0782,0x20,  
0x0783,0x20,  
0x0784,0x22,  
0x0785,0x21,  
0x0786,0x1f,  
0x0787,0x1f,  
0x0788,0x1f,  
0x0789,0x1f,  
0x078a,0x20,  
0x078b,0x20,  
0x078c,0x21,  
0x078d,0x21,  
0x078e,0x21,  
0x078f,0x20,  
0x0790,0x20,  
0x0791,0x20,  
0x0792,0x20,  
0x0793,0x21,  
0x0794,0x21,  
0x0795,0x22,  
0x0796,0x21,  
0x0797,0x22,  
0x0798,0x22,  
0x0799,0x22,  
0x079a,0x22,  
0x079b,0x22,  
0x079c,0x22,  
0x079d,0x21,  
0x079e,0x21,  
0x079f,0x22,  
0x07a0,0x22,  
0x07a1,0x22,  
0x07a2,0x21,  
0x07a3,0x21,  
0x07a4,0x20,  

0x07a5,0xf ,        //C2_90,2017410
0x07a6,0x9 ,
0x07a7,0x8 ,
0x07a8,0x8 ,
0x07a9,0x8 ,
0x07aa,0xa ,
0x07ab,0xf ,
0x07ac,0x23,
0x07ad,0x3 ,
0x07ae,0x2 ,
0x07af,0x1 ,
0x07b0,0x1 ,
0x07b1,0x1 ,
0x07b2,0x2 ,
0x07b3,0x4 ,
0x07b4,0x5 ,
0x07b5,0x1 ,
0x07b6,0x0 ,
0x07b7,0x0 ,
0x07b8,0x1 ,
0x07b9,0x1 ,
0x07ba,0x1 ,
0x07bb,0x1 ,
0x07bc,0x3 ,
0x07bd,0x0 ,
0x07be,0x0 ,
0x07bf,0x1 ,
0x07c0,0x1 ,
0x07c1,0x1 ,
0x07c2,0x1 ,
0x07c3,0x1 ,
0x07c4,0x1 ,
0x07c5,0x0 ,
0x07c6,0x1 ,
0x07c7,0x1 ,
0x07c8,0x1 ,
0x07c9,0x1 ,
0x07ca,0x1 ,
0x07cb,0x1 ,
0x07cc,0x1 ,
0x07cd,0x1 ,
0x07ce,0x0 ,
0x07cf,0x1 ,
0x07d0,0x1 ,
0x07d1,0x1 ,
0x07d2,0x1 ,
0x07d3,0x1 ,
0x07d4,0x3 ,
0x07d5,0x3 ,
0x07d6,0x2 ,
0x07d7,0x1 ,
0x07d8,0x1 ,
0x07d9,0x1 ,
0x07da,0x2 ,
0x07db,0x4 ,
0x07dc,0x6 ,
0x07dd,0xd ,
0x07de,0x9 ,
0x07df,0x8 ,
0x07e0,0x7 ,
0x07e1,0x8 ,
0x07e2,0x9 ,
0x07e3,0xe ,
0x07e4,0x1c,
0x07e5,0x20,
0x07e6,0x21,
0x07e7,0x20,
0x07e8,0x20,
0x07e9,0x20,
0x07ea,0x20,
0x07eb,0x20,
0x07ec,0x1e,
0x07ed,0x20,
0x07ee,0x20,
0x07ef,0x21,
0x07f0,0x21,
0x07f1,0x21,
0x07f2,0x20,
0x07f3,0x20,
0x07f4,0x20,
0x07f5,0x20,
0x07f6,0x21,
0x07f7,0x20,
0x07f8,0x20,
0x07f9,0x20,
0x07fa,0x20,
0x07fb,0x20,
0x07fc,0x20,
0x07fd,0x20,
0x07fe,0x20,
0x07ff,0x21,
0x0800,0x21,
0x0801,0x21,
0x0802,0x20,
0x0803,0x20,
0x0804,0x21,
0x0805,0x20,
0x0806,0x20,
0x0807,0x21,
0x0808,0x21,
0x0809,0x20,
0x080a,0x20,
0x080b,0x20,
0x080c,0x20,
0x080d,0x20,
0x080e,0x20,
0x080f,0x20,
0x0810,0x20,
0x0811,0x20,
0x0812,0x20,
0x0813,0x20,
0x0814,0x20,
0x0815,0x20,
0x0816,0x20,
0x0817,0x20,
0x0818,0x20,
0x0819,0x20,
0x081a,0x20,
0x081b,0x20,
0x081c,0x20,
0x081d,0x20,
0x081e,0x1f,
0x081f,0x20,
0x0820,0x1f,
0x0821,0x20,
0x0822,0x1f,
0x0823,0x1f,
0x0824,0x1e,
0x0825,0x21,
0x0826,0x21,
0x0827,0x21,
0x0828,0x21,
0x0829,0x21,
0x082a,0x21,
0x082b,0x21,
0x082c,0x1f,
0x082d,0x21,
0x082e,0x21,
0x082f,0x21,
0x0830,0x21,
0x0831,0x21,
0x0832,0x21,
0x0833,0x21,
0x0834,0x22,
0x0835,0x21,
0x0836,0x20,
0x0837,0x20,
0x0838,0x20,
0x0839,0x20,
0x083a,0x20,
0x083b,0x20,
0x083c,0x21,
0x083d,0x20,
0x083e,0x20,
0x083f,0x20,
0x0840,0x20,
0x0841,0x20,
0x0842,0x20,
0x0843,0x20,
0x0844,0x21,
0x0845,0x20,
0x0846,0x20,
0x0847,0x20,
0x0848,0x20,
0x0849,0x20,
0x084a,0x20,
0x084b,0x20,
0x084c,0x21,
0x084d,0x20,
0x084e,0x20,
0x084f,0x20,
0x0850,0x20,
0x0851,0x20,
0x0852,0x20,
0x0853,0x20,
0x0854,0x21,
0x0855,0x21,
0x0856,0x21,
0x0857,0x21,
0x0858,0x21,
0x0859,0x21,
0x085a,0x21,
0x085b,0x21,
0x085c,0x21,
0x085d,0x21,
0x085e,0x20,
0x085f,0x21,
0x0860,0x21,
0x0861,0x21,
0x0862,0x21,
0x0863,0x21,
0x0864,0x20,

0x0865,0xe ,         //d2_90,20170410
0x0866,0x9 , 
0x0867,0x8 , 
0x0868,0x7 , 
0x0869,0x8 , 
0x086a,0xa , 
0x086b,0xe , 
0x086c,0x24, 
0x086d,0x3 , 
0x086e,0x1 , 
0x086f,0x1 , 
0x0870,0x0 , 
0x0871,0x1 , 
0x0872,0x1 , 
0x0873,0x3 , 
0x0874,0x4 , 
0x0875,0x0 , 
0x0876,0x0 , 
0x0877,0x0 , 
0x0878,0x0 , 
0x0879,0x0 , 
0x087a,0x0 , 
0x087b,0x1 , 
0x087c,0x2 , 
0x087d,0x0 , 
0x087e,0x0 , 
0x087f,0x0 , 
0x0880,0x0 , 
0x0881,0x0 , 
0x0882,0x0 , 
0x0883,0x0 , 
0x0884,0x0 , 
0x0885,0x0 , 
0x0886,0x0 , 
0x0887,0x0 , 
0x0888,0x0 , 
0x0889,0x0 , 
0x088a,0x0 , 
0x088b,0x0 , 
0x088c,0x0 , 
0x088d,0x0 , 
0x088e,0x0 , 
0x088f,0x0 , 
0x0890,0x0 , 
0x0891,0x0 , 
0x0892,0x0 , 
0x0893,0x1 , 
0x0894,0x2 , 
0x0895,0x3 , 
0x0896,0x2 , 
0x0897,0x1 , 
0x0898,0x1 , 
0x0899,0x1 , 
0x089a,0x2 , 
0x089b,0x3 , 
0x089c,0x5 , 
0x089d,0xd , 
0x089e,0x9 , 
0x089f,0x7 , 
0x08a0,0x7 , 
0x08a1,0x7 , 
0x08a2,0x9 , 
0x08a3,0xd , 
0x08a4,0x1c, 
0x08a5,0x21, 
0x08a6,0x20, 
0x08a7,0x20, 
0x08a8,0x20, 
0x08a9,0x20, 
0x08aa,0x20, 
0x08ab,0x21, 
0x08ac,0x1e, 
0x08ad,0x20, 
0x08ae,0x20, 
0x08af,0x20, 
0x08b0,0x20, 
0x08b1,0x20, 
0x08b2,0x20, 
0x08b3,0x20, 
0x08b4,0x20, 
0x08b5,0x20, 
0x08b6,0x20, 
0x08b7,0x20, 
0x08b8,0x20, 
0x08b9,0x20, 
0x08ba,0x20, 
0x08bb,0x20, 
0x08bc,0x20, 
0x08bd,0x20, 
0x08be,0x20, 
0x08bf,0x20, 
0x08c0,0x20, 
0x08c1,0x20, 
0x08c2,0x20, 
0x08c3,0x20, 
0x08c4,0x21, 
0x08c5,0x20, 
0x08c6,0x20, 
0x08c7,0x20, 
0x08c8,0x21, 
0x08c9,0x20, 
0x08ca,0x20, 
0x08cb,0x20, 
0x08cc,0x20, 
0x08cd,0x20, 
0x08ce,0x20, 
0x08cf,0x20, 
0x08d0,0x20, 
0x08d1,0x20, 
0x08d2,0x20, 
0x08d3,0x20, 
0x08d4,0x20, 
0x08d5,0x20, 
0x08d6,0x20, 
0x08d7,0x20, 
0x08d8,0x20, 
0x08d9,0x20, 
0x08da,0x20, 
0x08db,0x20, 
0x08dc,0x20, 
0x08dd,0x20, 
0x08de,0x20, 
0x08df,0x20, 
0x08e0,0x20, 
0x08e1,0x20, 
0x08e2,0x20, 
0x08e3,0x20, 
0x08e4,0x22, 
0x08e5,0x21, 
0x08e6,0x21, 
0x08e7,0x21, 
0x08e8,0x22, 
0x08e9,0x21, 
0x08ea,0x22, 
0x08eb,0x21, 
0x08ec,0x20, 
0x08ed,0x22, 
0x08ee,0x22, 
0x08ef,0x22, 
0x08f0,0x22, 
0x08f1,0x22, 
0x08f2,0x22, 
0x08f3,0x22, 
0x08f4,0x22, 
0x08f5,0x22, 
0x08f6,0x21, 
0x08f7,0x21, 
0x08f8,0x21, 
0x08f9,0x21, 
0x08fa,0x21, 
0x08fb,0x22, 
0x08fc,0x22, 
0x08fd,0x21, 
0x08fe,0x20, 
0x08ff,0x20, 
0x0900,0x20, 
0x0901,0x20, 
0x0902,0x20, 
0x0903,0x21, 
0x0904,0x22, 
0x0905,0x21, 
0x0906,0x20, 
0x0907,0x20, 
0x0908,0x20, 
0x0909,0x20, 
0x090a,0x20, 
0x090b,0x21, 
0x090c,0x22, 
0x090d,0x21, 
0x090e,0x21, 
0x090f,0x20, 
0x0910,0x20, 
0x0911,0x20, 
0x0912,0x21, 
0x0913,0x21, 
0x0914,0x22, 
0x0915,0x22, 
0x0916,0x22, 
0x0917,0x22, 
0x0918,0x22, 
0x0919,0x22, 
0x091a,0x22, 
0x091b,0x22, 
0x091c,0x23, 
0x091d,0x21, 
0x091e,0x21, 
0x091f,0x22, 
0x0920,0x22, 
0x0921,0x21, 
0x0922,0x22, 
0x0923,0x21, 
0x0924,0x20, 

//blc                            
0xfffe,0x30,                     
0x0013,0x04,//bias               
0x0014,0x00,                     
0x071b,0x10,//blc 
0x0000,0x01,  
0x0002,0x90,//简单AWB，auto_lenc mode enable
0x0003,0x31,

//AWB
0xfffd,0x80,
0xfffe,0x14, //0411
0x0248,0x02,//0. AWB_ARITH_ORIGIN21 1. AWB_ARITH_SW_PRO 2. AWB_ARITH_M
0x0282,0x06,   //int B gain
0x0283,0x00,  
0x0286,0x04,   //int Gb gain
0x0287,0x00, 
0x028a,0x04,   //int Gr gain
0x028b,0x00,
0x028e,0x04,   //int R gain
0x028f,0x04,
0x02b6,0x08,    //B_temp      
0x02b7,0x00,           
0x02ba,0x04,    //G_ temp          
0x02bb,0x00,      
0x02be,0x06,   //R_temp      
0x02bf,0x04,

0xfffe,0x14,
0x0248,0x01,//0. AWB_ARITH_ORIGIN21 1. AWB_ARITH_SW_PRO 2. AWB_ARITH_MANUAL
0x0249,0x01,//AWBFlexiMap_en
0x024a,0x00,//AWBMove_en
0x027a,0x00,//nCTBasedMinNum    //20
0x027b,0x10,
0x027c,0x0f,
0x027d,0xff,//nMaxAWBGain
//	0x027E,0x01,//AWB STEP
//	0x027F,0x03,//PER FRAME MAX STEP

0x24a,0x00,//AWB MOVE
0x24e,0x00,
0x24f,0x20,
0x252,0x00,
0x253,0x00,
0x256,0x00,
0x257,0x00,
0x25a,0x00,
0x25b,0x00,
0x25e,0x00,
0x25f,0x00,
0x262,0x00,
0x263,0x00,

0x264,0x00,
0x265,0x38,
0x266,0x00,
0x267,0x61,
0x268,0x00,
0x269,0xD0,

0xfffe,0x30,
0x0708,0x02, //pixel max value[9:8]  //03
0x0709,0xa0, //pixel max value[7:0]  //f0
0x070a,0x00, //pixel min value[9:8] 
0x070b,0x10, //pixel min value[7:0] 
0x071c,0x0a, //simple awb
0x0003,0x31,
0xfffd,0x80,
0xfffe,0x30,

0x0730,0xad,  // win1 startx
0x0731,0xdd,  // win1 endx
0x0732,0x40,  // win1 starty
0x0733,0x4e,  // win1 endy
0x0734,0x8a,  // win2 startx
0x0735,0xb6,  // win2 endx
0x0736,0x5e,  // win2 starty
0x0737,0x70,  // win2 endy
0x0738,0xa3,  // win3 startx
0x0739,0xc8,  // win3 endx
0x073a,0x4c,  // win3 starty
0x073b,0x58,  // win3 endy
0x073c,0x72,  // win4 startx
0x073d,0x8f,  // win4 endx
0x073e,0x5f,  // win4 starty
0x073f,0x75,  // win4 endy
0x0740,0xc9,  // win5 startx
0x0741,0xf0,  // win5 endx
0x0742,0x39,  // win5 starty
0x0743,0x44,  // win5 endy
0x0744,0x62,  // win6 startx
0x0745,0x88,  // win6 endx
0x0746,0x65,  // win6 starty
0x0747,0x80,  // win6 endy
0x0748,0x5c,  // win7 startx
0x0749,0x7a,  // win7 endx
0x074a,0x72,  // win7 starty
0x074b,0x90,  // win7 endy
0x074c,0x90,  // win8 startx
0x074d,0xaf,  // win8 endx
0x074e,0x50,  // win8 starty
0x074f,0x5f,  // win8 endy
0x0750,0x50,  // win9 startx
0x0751,0x5f,  // win9 endx
0x0752,0x75,  // win9 starty
0x0753,0x93,  // win9 endy
0x0754,0x00,  // win10 startx
0x0755,0x00,  // win10 endx
0x0756,0x00,  // win10 starty
0x0757,0x00,  // win10 endy
0x0758,0x00,  // win11 startx
0x0759,0x00,  // win11 endx
0x075a,0x00,  // win11 starty
0x075b,0x00,  // win11 endy
0x075c,0x00,  // win12 startx
0x075d,0x00,  // win12 endx
0x075e,0x00,  // win12 starty
0x075f,0x00,  // win12 endy
0x0760,0x00,  // win13 startx
0x0761,0x00,  // win13 endx
0x0762,0x00,  // win13 starty
0x0763,0x00,  // win13 endy
0x0764,0x00,  // win14 startx
0x0765,0x00,  // win14 endx
0x0766,0x00,  // win14 starty
0x0767,0x00,  // win14 endy
0x0768,0x00,  // win15 startx
0x0769,0x00,  // win15 endx
0x076a,0x00,  // win15 starty
0x076b,0x00,  // win15 endy
0x076c,0x00,  // win16 startx
0x076d,0x00,  // win16 endx
0x076e,0x00,  // win16 starty
0x076f,0x00,  // win16 endy
0x0770,0x31,  // wt1 wt2
0x0771,0x32,  // wt3 wt4
0x0772,0x11,  // wt5 wt6
0x0773,0x11,  // wt7 wt8
0x0774,0x30,  // wt9 wt10
0x0775,0x00,  // wt11 wt12
0x0776,0x00,  // wt13 wt14
0x0777,0x00,  // wt15 wt16

//gamma
0xfffd,0x80, 
0xfffe,0x30, 
0x1400,0x00, 
0x1401,0x04, 
0x1402,0x09, 
0x1403,0x0d, 
0x1404,0x12, 
0x1405,0x16, 
0x1406,0x1a, 
0x1407,0x1f, 
0x1408,0x23, 
0x1409,0x27, 
0x140a,0x2b, 
0x140b,0x2f, 
0x140c,0x33, 
0x140d,0x37, 
0x140e,0x3b, 
0x140f,0x3f, 
0x1410,0x42, 
0x1411,0x46, 
0x1412,0x49, 
0x1413,0x4c, 
0x1414,0x50, 
0x1415,0x53, 
0x1416,0x56, 
0x1417,0x59, 
0x1418,0x5c, 
0x1419,0x5f, 
0x141a,0x62, 
0x141b,0x65, 
0x141c,0x67, 
0x141d,0x6a, 
0x141e,0x6d, 
0x141f,0x6f, 
0x1420,0x72, 
0x1421,0x77, 
0x1422,0x7c, 
0x1423,0x81, 
0x1424,0x85, 
0x1425,0x8a, 
0x1426,0x8e, 
0x1427,0x93, 
0x1428,0x97, 
0x1429,0x9c, 
0x142a,0xa0, 
0x142b,0xa4, 
0x142c,0xa8, 
0x142d,0xac, 
0x142e,0xaf, 
0x142f,0xb3, 
0x1430,0xb6, 
0x1431,0xbd, 
0x1432,0xc3, 
0x1433,0xc8, 
0x1434,0xcd, 
0x1435,0xd1, 
0x1436,0xd5, 
0x1437,0xd8, 
0x1438,0xdb, 
0x1439,0xdd, 
0x143a,0xdf, 
0x143b,0xe1, 
0x143c,0xe3, 
0x143d,0xe4, 
0x143e,0xe6, 
0x143f,0xe7, 
0x1440,0xe8,




//CMX
0xfffe,0x30,
0x1200,0x1,	  //CMX_CC_Rg-0.25_Bg-0.25_Rb-0.04_Gb-0.1.txt
0x1201,0x00,	
0x1202,0x0,	
0x1203,0x96,	
0x1204,0x3,	
0x1205,0xD2,	
0x1206,0x0,	
0x1207,0x4E,	
0x1208,0x0,	
0x1209,0x26,	
0x120A,0x2,	
0x120B,0x70,	
0x120C,0x4,	
0x120D,0x45,	
0x120E,0x1,	
0x120F,0x7A,	
0x1210,0x0,	
0x1211,0x00,	
0x1212,0x0,	
0x1213,0x72,	
0x1214,0x1,	
0x1215,0x2F,	
0x1216,0x2,	
0x1217,0x44,	
0x1218,0x5,	
0x1219,0xEB,	
0x121A,0x0,	
0x121B,0x7C,	
0x121C,0x0,	
0x121D,0xB4,	
0x121E,0x1,	
0x121F,0xE,	
0x1220,0x0,	
0x1221,0xE5,	
0x1222,0x3,	
0x1223,0x34,	
0x122e,0x10,	
0x122F,0x1A,	
0x1230,0x1A,	
0x1228,0x0,	
0x1229,0x62,	
0x122A,0x0,	
0x122B,0xB9,	
0x122C,0x1,	
0x122D,0x46,	
0x1231,0x03,
0x1232,0x40,
0x1233,0x30,
0x1234,0x01,
0x1235,0x04,

//advance_raw_dns
0xfffe,0x30,
0x0002,0x96,   //bit[1]advance_raw_dns_en

0x2000,0x06,  //s0_sigma_0
0x2001,0x08,
0x2002,0x0a,
0x2003,0x0c,
0x2004,0x14,
0x2005,0x20,  //s0_sigma_5

0x2006,0x14,  //s0_Gsl_0
0x2007,0x10,
0x2008,0x0a,
0x2009,0x08,
0x200a,0x06,
0x200b,0x08,  //s0_Gsl_5

0x200c,0x14,  //s0_RBsl_0
0x200d,0x10,
0x200e,0x0a,
0x200f,0x08,
0x2010,0x06,
0x2011,0x08,   //s0_RBsl_5

0x2012,0x20,   //s0_ps00    //sigma_scale 大
0x2013,0x20,
0x2014,0x20,
0x2015,0x20,
0x2016,0x20,
0x2017,0x20,   //s0_ps05

0x2018,0x24,   //s0_ps10
0x2019,0x24,
0x201a,0x24,
0x201b,0x24,
0x201c,0x24,
0x201d,0x24,  //s0_ps15

0x201e,0x28,  //s0_ps20
0x201f,0x28,
0x2020,0x28,
0x2021,0x28,
0x2022,0x28,
0x2023,0x28,   //s0_ps25

0x2024,0x30,   //s0_ps30
0x2025,0x30,
0x2026,0x30,
0x2027,0x30,
0x2028,0x30,
0x2029,0x30,   //s0_ps35

0x202a,0x20,    //s0_pl00     //h2_scale С
0x202b,0x20,
0x202c,0x20,
0x202d,0x20,
0x202e,0x20,
0x202f,0x20,   //s0_pl05

0x2030,0x1d,   //s0_pl10
0x2031,0x1d,
0x2032,0x1d,
0x2033,0x1d,
0x2034,0x1d,
0x2035,0x1d,   //s0_pl15

0x2036,0x1c,  //s0_pl20
0x2037,0x1c,
0x2038,0x1c,
0x2039,0x1c,
0x203a,0x1c,
0x203b,0x1c,   //s0_pl25

0x203c,0x1a,  //s0_pl30
0x203d,0x1a,
0x203e,0x1a,
0x203f,0x1a,
0x2040,0x1a,
0x2041,0x1a,   //s0_pl35

0x2044,0x10,   //bit[4:0]thre_y   

//UV DNS
0xfffe,0x30,
0x2100,0x02,   //l_noise_list0
0x2101,0x04,
0x2102,0x08,
0x2103,0x0c,
0x2104,0x10,
0x2105,0x14,   //l_noise_list5
0x2106,0x5f,   //bit[7]l_noise_man_en; bit[6]l_sdw_ext_en; bit[4:0]l_sdw_ext_ns
0x2107,0x08,   //l_noise_man

//CIP
0xfffe,0x30,
0x0f00,0x04,   //bit[7:4] noise_y_slp  bit[3:0] Lsharp
0x0f02,0x01,  //noise_list_0
0x0f03,0x01,
0x0f04,0x01,
0x0f05,0x01,
0x0f06,0x01,
0x0f07,0x01,
0x0f08,0x01,
0x0f09,0x01,  //noise_list_7
0x0f0a,0x08,   //min_shp
0x0f0b,0x16,   //max_shp
0x0f0c,0x01,   //min_detail
0x0f0d,0x02,   //max_detail
0x0f0e,0x01,   //min_shp_gain
0x0f0f,0x28,   //max_shp_gain
0x0f10,0x30,   //max_shp_gain

//DEFOG_detail enhance
0xfffe,0x30,
0x2b04,0x0b,   //bit[3:0]饱和度增强
0x2b16,0x06,  //bit[3]pdf_avg_mode; bit[2]detail_enhance_en; bit[1]wdr_en; bit[0]:jdark_en
0xfffe,0x14,
0x002f,0x01,   
0x09ab,0x02,   //Gmax
0x09ac,0x08,   //map_rang[0]
0x09ad,0xE0,   //map_rang[1]
0x09ae,0x41,   //nzPDF64_num_thd
0x09af,0xff,   //grayhigh    //bug，必须写成0xff
0x09b2,0xff,   //gain_thd[7:0]
0x09b3,0xff,   //gain_thd[7:0]
0x09b4,0x10,   //Extratio
0x09b5,0x14,   //Extratio max
0x09b6,0x00,  //weak_adj_on  	0x00:强均衡；	0x01:弱均衡

0x09bb,0x02,
0x09bc,0x03,
0x09bd,0x0a,
0x09be,0x0b,
0x09bf,0x12,
0x09c0,0x13,
0x09c1,0xff,
0x09c2,0x1c,
0x09c3,0x25,
0x09c4,0x26,
0x09c5,0x39,
0x09c6,0x3a,
0x09c7,0x45,
0x09c8,0x46,
0x09c9,0xff,

0xfffe,0x30,
0x2b9a,0x00,//gain0
0x2b9b,0x00,
0x2b9c,0x10,//gain1
0x2b9d,0x00,
0x2b9e,0x20,//gain2
0x2b9f,0x00,
0x2ba0,0x40,//gain3
0x2ba1,0x00,
0x2ba2,0x80,//gain4
0x2ba3,0x00,
0x2ba4,0x00,  //gain5
0x2ba5,0x01,  
0x2ba6,0x00,  //gain6
0x2ba7,0x02,  
0x2ba8,0x00,   //gain7
0x2ba9,0x04,  
0x2bac,0x00,  //thd0
0x2bad,0x01, 
0x2bae,0x03, 
0x2baf,0x03, 
0x2bb0,0x03, 
0x2bb1,0x04, 
0x2bb2,0x01, 
0x2bb3,0x01,  //thd7
0x2bb4,0x80,   //thd0_max
0x2bb5,0x80, 
0x2bb6,0x80, 
0x2bb7,0x80, 
0x2bb8,0x80, 
0x2bb9,0x80, 
0x2bba,0x80, 
0x2bbb,0x80,   //thd7_max
0x2bbc,0x22,  //enhance_ratio0 
0x2bbd,0x22,
0x2bbe,0x22,
0x2bbf,0x22,
0x2bc0,0x22,
0x2bc1,0x22,
0x2bc2,0x22,
0x2bc3,0x20,  //enhance_ratio7  
//defog end

//Auto Sat
0xfffe,0x14,
0x026c,0x01,   //Auto_Sat enable
0x026e,0x50,    //sat_u[0]   if gain＜3f
0x026f,0x40,    //sat_u[1]   if gain＜5f
0x0270,0x40,    //sat_u[2]   if gain＜7f
0x0271,0x30,    //sat_u[3]   if gain＜9f
0x0272,0x30,    //sat_u[4]   if gain＜bf
0x0273,0x30,    //sat_u[5]   else if
0x0274,0x50,    //sat_v[0]   if gain＜3f  
0x0275,0x3A,    //sat_v[1]   if gain＜5f  
0x0276,0x3A,    //sat_v[2]   if gain＜7f  
0x0277,0x2A,    //sat_v[3]   if gain＜9f  
0x0278,0x2A,    //sat_v[4]   if gain＜bf  
0x0279,0x2A,    //sat_v[5]   else if      

//AE patch
0xfffd,0x80, 
0xfffe,0x50, 
0x000e,0x54, 
0xfffe,0x14, 
0x0006,0x8,  
0x0007,0xb5, 
0x0014,0x00, 
0x0015,0x14, 
0x0016,0x26, 
0x0017,0x20, 
0x2114,0x9c, 
0x2115,0x21, 
0x2116,0xff, 
0x2117,0xec, 
0x2118,0xd4, 
0x2119,0x1,  
0x211a,0x48, 
0x211c,0xd4, 
0x211d,0x1,  
0x211e,0x50, 
0x211f,0x4,  
0x2120,0xd4, 
0x2121,0x1,  
0x2122,0x60, 
0x2123,0x8,  
0x2124,0xd4, 
0x2125,0x1,  
0x2126,0x70, 
0x2127,0xc,  
0x2128,0xd4, 
0x2129,0x1,  
0x212a,0x80, 
0x212b,0x10, 
0x212c,0x1a, 
0x212f,0x14, 
0x2130,0xaa, 
0x2131,0x10, 
0x2132,0x5d, 
0x2133,0x1e, 
0x2134,0x9c, 
0x2135,0x60, 
0x2137,0x1,  
0x2138,0x7,  
0x2139,0xfb, 
0x213a,0x7,  
0x213b,0xa0, 
0x213c,0xd8, 
0x213d,0x10, 
0x213e,0x18, 
0x2140,0x85, 
0x2141,0x8b, 
0x2143,0x8,  
0x2144,0x9c, 
0x2145,0x80, 
0x2147,0x2,  
0x2148,0x85, 
0x2149,0x4c, 
0x214a,0x1,  
0x214b,0xc,  
0x214c,0xa9, 
0x214d,0xcb, 
0x2150,0x9c, 
0x2151,0xa0, 
0x2157,0x4,  
0x2158,0xd8, 
0x2159,0x10, 
0x215a,0x20, 
0x215c,0xb9, 
0x215d,0x4a, 
0x215f,0x41, 
0x2160,0xa4, 
0x2161,0xa3, 
0x2163,0xff, 
0x2164,0xbc, 
0x2165,0xaa, 
0x2167,0x3f, 
0x2168,0xf,  
0x2169,0xff, 
0x216a,0xff, 
0x216b,0xfd, 
0x216c,0x9c, 
0x216d,0x65, 
0x216f,0x1,  
0x2170,0x9c, 
0x2171,0xc0, 
0x2174,0x18, 
0x2175,0xe0, 
0x2177,0x14, 
0x2178,0xa8, 
0x2179,0xe7, 
0x217a,0x5d, 
0x217c,0xe0, 
0x217d,0x66, 
0x217e,0x38, 
0x2180,0x8c, 
0x2181,0x63, 
0x2184,0xe4, 
0x2185,0x83, 
0x2186,0x50, 
0x2188,0xc,  
0x218b,0x6,  
0x218c,0x9c, 
0x218d,0x86, 
0x218f,0x1,  
0x2190,0xa4, 
0x2191,0xc4, 
0x2193,0xff, 
0x2194,0xbc, 
0x2195,0x46, 
0x2197,0x13, 
0x2198,0xf,  
0x2199,0xff, 
0x219a,0xff, 
0x219b,0xfa, 
0x219c,0xe0, 
0x219d,0x66, 
0x219e,0x38, 
0x21a0,0xb8, 
0x21a1,0xe5, 
0x21a3,0x2,  
0x21a4,0x94, 
0x21a5,0x8c, 
0x21a7,0xe8, 
0x21a8,0xa8, 
0x21a9,0x6e, 
0x21ac,0xe0, 
0x21ad,0xa7, 
0x21ae,0x28, 
0x21b0,0xb8, 
0x21b1,0xa5, 
0x21b3,0x2,  
0x21b4,0x7,  
0x21b5,0xfb, 
0x21b6,0x6,  
0x21b7,0xd4, 
0x21b8,0xe0, 
0x21b9,0xa5, 
0x21ba,0x30, 
0x21bc,0x9c, 
0x21bd,0x60, 
0x21bf,0x3,  
0x21c0,0xd8, 
0x21c1,0x10, 
0x21c2,0x18, 
0x21c4,0x18, 
0x21c5,0x60, 
0x21c7,0x14, 
0x21c8,0xa8, 
0x21c9,0x63, 
0x21ca,0x5d, 
0x21cb,0x28, 
0x21cc,0x84, 
0x21cd,0x8c, 
0x21ce,0x1,  
0x21cf,0xc,  
0x21d0,0x94, 
0x21d1,0x63, 
0x21d4,0xb9, 
0x21d5,0x44, 
0x21d7,0x41, 
0x21d8,0xe4, 
0x21d9,0x43, 
0x21da,0x50, 
0x21dc,0x10, 
0x21df,0x74, 
0x21e0,0xa8, 
0x21e1,0x6e, 
0x21e4,0x9c, 
0x21e5,0x80, 
0x21e6,0x30, 
0x21e7,0x9,  
0x21e8,0x9c, 
0x21e9,0xa0, 
0x21eb,0x12, 
0x21ec,0x7,  
0x21ed,0xfb, 
0x21ee,0x6,  
0x21ef,0xc6, 
0x21f0,0x15, 
0x21f4,0x18, 
0x21f5,0xe0, 
0x21f6,0x80, 
0x21f7,0x14, 
0x21f8,0xa8, 
0x21f9,0x67, 
0x21fa,0x1e, 
0x21fb,0x12, 
0x21fc,0xa8, 
0x21fd,0x87, 
0x21fe,0x1e, 
0x21ff,0x13, 
0x2200,0x8c, 
0x2201,0x63, 
0x2204,0x8c, 
0x2205,0xa4, 
0x2208,0xb8, 
0x2209,0x83, 
0x220b,0x8,  
0x220c,0x18, 
0x220d,0x60, 
0x220f,0x14, 
0x2210,0xa8, 
0x2211,0x63, 
0x2212,0x5d, 
0x2213,0x20, 
0x2214,0x94, 
0x2215,0xc3, 
0x2218,0xe0, 
0x2219,0x65, 
0x221a,0x20, 
0x221c,0xa5, 
0x221d,0x3,  
0x221e,0xff, 
0x221f,0xff, 
0x2220,0xe4, 
0x2221,0x66, 
0x2222,0x40, 
0x2224,0x10, 
0x2227,0x5a, 
0x2228,0xa8, 
0x2229,0x67, 
0x222a,0x9,  
0x222b,0xa9, 
0x222c,0x9c, 
0x222d,0xa0, 
0x222f,0x3,  
0x2230,0xa8, 
0x2231,0x87, 
0x2232,0x9,  
0x2233,0xaa, 
0x2234,0xd8, 
0x2235,0x3,  
0x2236,0x28, 
0x2238,0xa8, 
0x2239,0x67, 
0x223a,0x9,  
0x223b,0xb9, 
0x223c,0x9c, 
0x223d,0xe0, 
0x223f,0x2,  
0x2240,0xd8, 
0x2241,0x4,  
0x2242,0x38, 
0x2244,0x9c, 
0x2245,0x80, 
0x2248,0xd8, 
0x2249,0x3,  
0x224a,0x20, 
0x224c,0x18, 
0x224d,0x60, 
0x224e,0x80, 
0x224f,0x14, 
0x2250,0xa8, 
0x2251,0x83, 
0x2252,0x1,  
0x2253,0x56, 
0x2254,0xa8, 
0x2255,0xa3, 
0x2256,0x1,  
0x2257,0x57, 
0x2258,0x8c, 
0x2259,0x64, 
0x225c,0xb8, 
0x225d,0x83, 
0x225f,0x8,  
0x2260,0x8c, 
0x2261,0xa5, 
0x2264,0x18, 
0x2265,0x60, 
0x2267,0x14, 
0x2268,0xa8, 
0x2269,0x63, 
0x226a,0x5d, 
0x226b,0x24, 
0x226c,0x94, 
0x226d,0xc3, 
0x2270,0xe0, 
0x2271,0x65, 
0x2272,0x20, 
0x2274,0xa4, 
0x2275,0x63, 
0x2276,0xff, 
0x2277,0xff, 
0x2278,0xe4, 
0x2279,0x46, 
0x227a,0x18, 
0x227c,0x10, 
0x227f,0x2b, 
0x2280,0x15, 
0x2284,0x18, 
0x2285,0x60, 
0x2287,0x14, 
0x2288,0xa8, 
0x2289,0x63, 
0x228a,0x5d, 
0x228b,0x22, 
0x228c,0x94, 
0x228d,0x63, 
0x2290,0xe4, 
0x2291,0xa3, 
0x2292,0x40, 
0x2294,0x10, 
0x2297,0x25, 
0x2298,0xbc, 
0x2299,0xaa, 
0x229a,0x20, 
0x229c,0x18, 
0x229d,0x60, 
0x229f,0x14, 
0x22a0,0xa8, 
0x22a1,0x63, 
0x22a2,0x5d, 
0x22a3,0x26, 
0x22a4,0x8c, 
0x22a5,0x83, 
0x22a8,0x18, 
0x22a9,0x60, 
0x22aa,0x80, 
0x22ab,0x30, 
0x22ac,0xa8, 
0x22ad,0x63, 
0x22ae,0x7,  
0x22af,0x71, 
0x22b0,0xd8, 
0x22b1,0x3,  
0x22b2,0x20, 
0x22b4,0x10, 
0x22b7,0x26, 
0x22b8,0xbc, 
0x22b9,0xaa, 
0x22ba,0x10, 
0x22bc,0x18, 
0x22bd,0x60, 
0x22bf,0x14, 
0x22c0,0xa8, 
0x22c1,0x63, 
0x22c2,0x5d, 
0x22c3,0x1c, 
0x22c4,0x9d, 
0x22c8,0x8c, 
0x22c9,0xe3, 
0x22cc,0x18, 
0x22cd,0x60, 
0x22cf,0x14, 
0x22d0,0xa8, 
0x22d1,0x63, 
0x22d2,0x5d, 
0x22d3,0x1d, 
0x22d4,0x8c, 
0x22d5,0xc3, 
0x22d8,0xa8, 
0x22d9,0xa7, 
0x22dc,0xa8, 
0x22dd,0x86, 
0x22e0,0xe0, 
0x22e1,0x65, 
0x22e2,0x38, 
0x22e3,0x2,  
0x22e4,0xbc, 
0x22e5,0xaa, 
0x22e6,0x3,  
0x22e7,0xff, 
0x22e8,0xe0, 
0x22e9,0xa4, 
0x22ea,0x30, 
0x22eb,0x2,  
0x22ec,0xe0, 
0x22ed,0x83, 
0x22ee,0x43, 
0x22ef,0x6,  
0x22f0,0xe0, 
0x22f1,0xa5, 
0x22f2,0x43, 
0x22f3,0x6,  
0x22f4,0x9c, 
0x22f5,0x60, 
0x22f7,0x5,  
0x22f8,0xb8, 
0x22f9,0x84, 
0x22fb,0x4c, 
0x22fc,0xd8, 
0x22fd,0x10, 
0x22fe,0x18, 
0x2300,0xe0, 
0x2301,0x84, 
0x2302,0x38, 
0x2304,0x84, 
0x2305,0x6e, 
0x2307,0x4,  
0x2308,0xd8, 
0x2309,0x83, 
0x230a,0x20, 
0x230b,0xb,  
0x230c,0xb8, 
0x230d,0x85, 
0x230f,0x4c, 
0x2310,0xe0, 
0x2311,0x84, 
0x2312,0x30, 
0x2314,0xd8, 
0x2315,0x83, 
0x2316,0x20, 
0x2317,0x11, 
0x2318,0x10, 
0x231b,0x62, 
0x231c,0xb8, 
0x231d,0x8a, 
0x231f,0x48, 
0x2323,0x5f, 
0x2324,0x9d, 
0x2325,0x40, 
0x2326,0x3,  
0x2327,0xff, 
0x2328,0x18, 
0x2329,0x60, 
0x232b,0x14, 
0x232c,0xa8, 
0x232d,0x63, 
0x232e,0x5d, 
0x232f,0x27, 
0x2330,0xbc, 
0x2331,0xaa, 
0x2332,0x20, 
0x2334,0x8c, 
0x2335,0x83, 
0x2338,0x18, 
0x2339,0x60, 
0x233a,0x80, 
0x233b,0x30, 
0x233c,0xa8, 
0x233d,0x63, 
0x233e,0x7,  
0x233f,0x71, 
0x2340,0xd8, 
0x2341,0x3,  
0x2342,0x20, 
0x2344,0xf,  
0x2345,0xff, 
0x2346,0xff, 
0x2347,0xde, 
0x2348,0xbc, 
0x2349,0xaa, 
0x234a,0x10, 
0x234c,0x10, 
0x234f,0x1b, 
0x2350,0xbc, 
0x2351,0xaa, 
0x2352,0x8,  
0x2354,0x18, 
0x2355,0x60, 
0x2357,0x14, 
0x2358,0xa8, 
0x2359,0x63, 
0x235a,0x5d, 
0x235b,0x1a, 
0x235c,0xa5, 
0x235d,0xa,  
0x235e,0xf,  
0x235f,0xff, 
0x2360,0x8c, 
0x2361,0xe3, 
0x2364,0x18, 
0x2365,0x60, 
0x2367,0x14, 
0x2368,0xa8, 
0x2369,0x63, 
0x236a,0x5d, 
0x236b,0x1c, 
0x236c,0x8c, 
0x236d,0xa3, 
0x2370,0x18, 
0x2371,0x60, 
0x2373,0x14, 
0x2374,0xa8, 
0x2375,0x63, 
0x2376,0x5d, 
0x2377,0x1b, 
0x2378,0x8c, 
0x2379,0xc3, 
0x237c,0x18, 
0x237d,0x60, 
0x237f,0x14, 
0x2380,0xa8, 
0x2381,0x63, 
0x2382,0x5d, 
0x2383,0x1d, 
0x2384,0x3,  
0x2385,0xff, 
0x2386,0xff, 
0x2387,0xd7, 
0x2388,0x8c, 
0x2389,0x83, 
0x238c,0x9c, 
0x238d,0xa0, 
0x238f,0x1,  
0x2390,0xa8, 
0x2391,0x87, 
0x2392,0x9,  
0x2393,0xaa, 
0x2394,0xd8, 
0x2395,0x3,  
0x2396,0x28, 
0x2398,0xa8, 
0x2399,0x67, 
0x239a,0x9,  
0x239b,0xb9, 
0x239c,0x9c, 
0x239d,0xe0, 
0x23a0,0xd8, 
0x23a1,0x4,  
0x23a2,0x38, 
0x23a4,0x3,  
0x23a5,0xff, 
0x23a6,0xff, 
0x23a7,0xa9, 
0x23a8,0x9c, 
0x23a9,0x80, 
0x23ab,0x4,  
0x23ac,0x9c, 
0x23ad,0x80, 
0x23ae,0x30, 
0x23af,0x9,  
0x23b0,0x3,  
0x23b1,0xff, 
0x23b2,0xff, 
0x23b3,0x8f, 
0x23b4,0x9c, 
0x23b5,0xa0, 
0x23b7,0x2,  
0x23b8,0x10, 
0x23bb,0x11, 
0x23bc,0xbc, 
0x23bd,0xaa, 
0x23be,0x4,  
0x23c0,0x18, 
0x23c1,0x60, 
0x23c3,0x14, 
0x23c4,0xa8, 
0x23c5,0x63, 
0x23c6,0x5d, 
0x23c7,0x18, 
0x23c8,0xa4, 
0x23c9,0x8a, 
0x23ca,0x7,  
0x23cb,0xff, 
0x23cc,0x8c, 
0x23cd,0xe3, 
0x23d0,0xe1, 
0x23d1,0x4,  
0x23d2,0x20, 
0x23d4,0x18, 
0x23d5,0x60, 
0x23d7,0x14, 
0x23d8,0xa8, 
0x23d9,0x63, 
0x23da,0x5d, 
0x23db,0x1a, 
0x23dc,0x8c, 
0x23dd,0xa3, 
0x23e0,0x18, 
0x23e1,0x60, 
0x23e3,0x14, 
0x23e4,0xa8, 
0x23e5,0x63, 
0x23e6,0x5d, 
0x23e7,0x19, 
0x23e8,0x8c, 
0x23e9,0xc3, 
0x23ec,0x18, 
0x23ed,0x60, 
0x23ef,0x14, 
0x23f0,0xa8, 
0x23f1,0x63, 
0x23f2,0x5d, 
0x23f3,0x1b, 
0x23f4,0x3,  
0x23f5,0xff, 
0x23f6,0xff, 
0x23f7,0xbb, 
0x23f8,0x8c, 
0x23f9,0x83, 
0x23fc,0x10, 
0x23ff,0x11, 
0x2400,0xbc, 
0x2401,0xaa, 
0x2402,0x2,  
0x2404,0x18, 
0x2405,0x60, 
0x2407,0x14, 
0x2408,0xa8, 
0x2409,0x63, 
0x240a,0x5d, 
0x240b,0x16, 
0x240c,0xa4, 
0x240d,0x8a, 
0x240e,0x3,  
0x240f,0xff, 
0x2410,0x8c, 
0x2411,0xe3, 
0x2414,0xb9, 
0x2415,0x4,  
0x2417,0x2,  
0x2418,0x18, 
0x2419,0x60, 
0x241b,0x14, 
0x241c,0xa8, 
0x241d,0x63, 
0x241e,0x5d, 
0x241f,0x18, 
0x2420,0x8c, 
0x2421,0xa3, 
0x2424,0x18, 
0x2425,0x60, 
0x2427,0x14, 
0x2428,0xa8, 
0x2429,0x63, 
0x242a,0x5d, 
0x242b,0x17, 
0x242c,0x8c, 
0x242d,0xc3, 
0x2430,0x18, 
0x2431,0x60, 
0x2433,0x14, 
0x2434,0xa8, 
0x2435,0x63, 
0x2436,0x5d, 
0x2437,0x19, 
0x2438,0x3,  
0x2439,0xff, 
0x243a,0xff, 
0x243b,0xaa, 
0x243c,0x8c, 
0x243d,0x83, 
0x2440,0x10, 
0x2443,0x10, 
0x2444,0xa4, 
0x2445,0x8a, 
0x2446,0x1,  
0x2447,0xff, 
0x2448,0x18, 
0x2449,0x60, 
0x244b,0x14, 
0x244c,0xa8, 
0x244d,0x63, 
0x244e,0x5d, 
0x244f,0x14, 
0x2450,0x8c, 
0x2451,0xe3, 
0x2454,0xb9, 
0x2455,0x4,  
0x2457,0x3,  
0x2458,0x18, 
0x2459,0x60, 
0x245b,0x14, 
0x245c,0xa8, 
0x245d,0x63, 
0x245e,0x5d, 
0x245f,0x16, 
0x2460,0x8c, 
0x2461,0xa3, 
0x2464,0x18, 
0x2465,0x60, 
0x2467,0x14, 
0x2468,0xa8, 
0x2469,0x63, 
0x246a,0x5d, 
0x246b,0x15, 
0x246c,0x8c, 
0x246d,0xc3, 
0x2470,0x18, 
0x2471,0x60, 
0x2473,0x14, 
0x2474,0xa8, 
0x2475,0x63, 
0x2476,0x5d, 
0x2477,0x17, 
0x2478,0x3,  
0x2479,0xff, 
0x247a,0xff, 
0x247b,0x9a, 
0x247c,0x8c, 
0x247d,0x83, 
0x2480,0x18, 
0x2481,0x60, 
0x2483,0x14, 
0x2484,0xa8, 
0x2485,0x63, 
0x2486,0x5d, 
0x2487,0x14, 
0x2488,0x8c, 
0x2489,0xe3, 
0x248c,0x18, 
0x248d,0x60, 
0x248f,0x14, 
0x2490,0xa8, 
0x2491,0x63, 
0x2492,0x5d, 
0x2493,0x15, 
0x2494,0x3,  
0x2495,0xff, 
0x2496,0xff, 
0x2497,0x90, 
0x2498,0x9d, 
0x249c,0xb8, 
0x249d,0x8a, 
0x249f,0x48, 
0x24a0,0xa8, 
0x24a1,0x84, 
0x24a3,0x40, 
0x24a4,0xd8, 
0x24a5,0x83, 
0x24a6,0x20, 
0x24a7,0x45, 
0x24a8,0xd8, 
0x24a9,0x83, 
0x24aa,0x50, 
0x24ab,0x46, 
0x24ac,0x9c, 
0x24ad,0x80, 
0x24af,0x6,  
0x24b0,0x18, 
0x24b1,0x60, 
0x24b3,0x14, 
0x24b4,0xa8, 
0x24b5,0x63, 
0x24b6,0x5d, 
0x24b7,0x1e, 
0x24b8,0xd8, 
0x24b9,0x3,  
0x24ba,0x20, 
0x24bc,0x85, 
0x24bd,0x21, 
0x24c0,0x85, 
0x24c1,0x41, 
0x24c3,0x4,  
0x24c4,0x85, 
0x24c5,0x81, 
0x24c7,0x8,  
0x24c8,0x85, 
0x24c9,0xc1, 
0x24cb,0xc,  
0x24cc,0x86, 
0x24cd,0x1,  
0x24cf,0x10, 
0x24d0,0x44, 
0x24d2,0x48, 
0x24d4,0x9c, 
0x24d5,0x21, 
0x24d7,0x14, 
0x24d8,0x9c, 
0x24d9,0x21, 
0x24da,0xff, 
0x24db,0xe8, 
0x24dc,0xd4, 
0x24dd,0x1,  
0x24de,0x48, 
0x24e0,0xd4, 
0x24e1,0x1,  
0x24e2,0x50, 
0x24e3,0x4,  
0x24e4,0xd4, 
0x24e5,0x1,  
0x24e6,0x60, 
0x24e7,0x8,  
0x24e8,0xd4, 
0x24e9,0x1,  
0x24ea,0x70, 
0x24eb,0xc,  
0x24ec,0xd4, 
0x24ed,0x1,  
0x24ee,0x80, 
0x24ef,0x10, 
0x24f0,0xd4, 
0x24f1,0x1,  
0x24f2,0x90, 
0x24f3,0x14, 
0x24f4,0x9c, 
0x24f5,0x60, 
0x24f7,0x7,  
0x24f8,0x1a, 
0x24f9,0x40, 
0x24fb,0x14, 
0x24fc,0xaa, 
0x24fd,0x52, 
0x24fe,0x5d, 
0x24ff,0x1e, 
0x2500,0x9d, 
0x2501,0xc0, 
0x2504,0xd8, 
0x2505,0x12, 
0x2506,0x18, 
0x2508,0x7,  
0x2509,0xfb, 
0x250a,0x6,  
0x250b,0xac, 
0x250c,0xaa, 
0x250d,0xe,  
0x2510,0x85, 
0x2511,0x8b, 
0x2513,0x8,  
0x2514,0xa9, 
0x2515,0x4b, 
0x2518,0x84, 
0x2519,0x6c, 
0x251a,0x1,  
0x251b,0x8,  
0x251c,0xb8, 
0x251d,0x63, 
0x251f,0x44, 
0x2520,0xbc, 
0x2521,0x43, 
0x2522,0x4,  
0x2523,0x64, 
0x2524,0x10, 
0x2527,0x5,  
0x2528,0x9d, 
0x2529,0xc3, 
0x252a,0xff, 
0x252b,0xff, 
0x252c,0x9d, 
0x252d,0xc0, 
0x252e,0x4,  
0x252f,0x65, 
0x2530,0xe0, 
0x2531,0xae, 
0x2532,0x18, 
0x2533,0x2,  
0x2534,0x9e, 
0x2535,0x5,  
0x2536,0xff, 
0x2537,0xff, 
0x2538,0x9c, 
0x2539,0x60, 
0x253b,0x8,  
0x253c,0xb8, 
0x253d,0xb0, 
0x253f,0x50, 
0x2540,0xd8, 
0x2541,0x12, 
0x2542,0x18, 
0x2544,0x94, 
0x2545,0x8c, 
0x2547,0xc8, 
0x2548,0xa8, 
0x2549,0x6a, 
0x254c,0x7,  
0x254d,0xfb, 
0x254e,0x5,  
0x254f,0xee, 
0x2550,0xa4, 
0x2551,0xa5, 
0x2553,0xff, 
0x2554,0xb8, 
0x2555,0xb0, 
0x2557,0x48, 
0x2558,0x94, 
0x2559,0x8c, 
0x255b,0xca, 
0x255c,0xa8, 
0x255d,0x6a, 
0x2560,0x7,  
0x2561,0xfb, 
0x2562,0x5,  
0x2563,0xe9, 
0x2564,0xa4, 
0x2565,0xa5, 
0x2567,0xff, 
0x2568,0x94, 
0x2569,0x8c, 
0x256b,0xcc, 
0x256c,0xa8, 
0x256d,0x6a, 
0x2570,0x7,  
0x2571,0xfb, 
0x2572,0x5,  
0x2573,0xe5, 
0x2574,0xa4, 
0x2575,0xb0, 
0x2577,0xff, 
0x2578,0xb8, 
0x2579,0xae, 
0x257b,0x50, 
0x257c,0xa8, 
0x257d,0x6a, 
0x2580,0x9c, 
0x2581,0x80, 
0x2582,0x30, 
0x2583,0x1a, 
0x2584,0x7,  
0x2585,0xfb, 
0x2586,0x5,  
0x2587,0xe0, 
0x2588,0xa4, 
0x2589,0xa5, 
0x258b,0xff, 
0x258c,0xb8, 
0x258d,0xae, 
0x258f,0x48, 
0x2590,0xa8, 
0x2591,0x6a, 
0x2594,0x9c, 
0x2595,0x80, 
0x2596,0x30, 
0x2597,0x19, 
0x2598,0x7,  
0x2599,0xfb, 
0x259a,0x5,  
0x259b,0xdb, 
0x259c,0xa4, 
0x259d,0xa5, 
0x259f,0xff, 
0x25a0,0xa8, 
0x25a1,0x6a, 
0x25a4,0xa4, 
0x25a5,0xae, 
0x25a7,0xff, 
0x25a8,0x7,  
0x25a9,0xfb, 
0x25aa,0x5,  
0x25ab,0xd7, 
0x25ac,0x9c, 
0x25ad,0x80, 
0x25ae,0x30, 
0x25af,0x18, 
0x25b0,0x9c, 
0x25b1,0x60, 
0x25b3,0x9,  
0x25b4,0xd8, 
0x25b5,0x12, 
0x25b6,0x18, 
0x25b8,0x85, 
0x25b9,0x21, 
0x25bc,0x85, 
0x25bd,0x41, 
0x25bf,0x4,  
0x25c0,0x85, 
0x25c1,0x81, 
0x25c3,0x8,  
0x25c4,0x85, 
0x25c5,0xc1, 
0x25c7,0xc,  
0x25c8,0x86, 
0x25c9,0x1,  
0x25cb,0x10, 
0x25cc,0x86, 
0x25cd,0x41, 
0x25cf,0x14, 
0x25d0,0x44, 
0x25d2,0x48, 
0x25d4,0x9c, 
0x25d5,0x21, 
0x25d7,0x18, 
0x25d8,0x9c, 
0x25d9,0x21, 
0x25da,0xff, 
0x25db,0xfc, 
0x25dc,0xd4, 
0x25dd,0x1,  
0x25de,0x48, 
0x25e0,0xbc, 
0x25e1,0x3,  
0x25e2,0x4,  
0x25e3,0xb,  
0x25e4,0x10, 
0x25e7,0x6,  
0x25e8,0xbc, 
0x25e9,0x3,  
0x25ea,0x4,  
0x25eb,0xc,  
0x25ec,0xc,  
0x25ef,0xa,  
0x25f0,0x15, 
0x25f7,0x6,  
0x25f8,0x15, 
0x25fc,0x7,  
0x25fd,0xff, 
0x25fe,0xff, 
0x25ff,0xb7, 
0x2600,0x15, 
0x2607,0x4,  
0x2608,0x15, 
0x260c,0x7,  
0x260d,0xff, 
0x260e,0xfe, 
0x260f,0xc2, 
0x2610,0x15, 
0x2614,0x85, 
0x2615,0x21, 
0x2618,0x44, 
0x261a,0x48, 
0x261c,0x9c, 
0x261d,0x21, 
0x261f,0x04,  
0x2620,0x9c, 
0x2621,0x21, 
0x2622,0xff, 
0x2623,0xfc, 
0x2624,0xd4, 
0x2625,0x01,  
0x2626,0x48, 
0x2628,0x07,  
0x2629,0xff, 
0x262a,0xff, 
0x262b,0xec, 
0x262c,0x15, 
0x2630,0x9d, 
0x2631,0x60, 
0x2634,0x85, 
0x2635,0x21, 
0x2638,0x44, 
0x263a,0x48, 
0x263c,0x9c, 
0x263d,0x21, 
0x263f,0x04,  





0x5d00,0x20,
0x5d01,0x21,
0x5d02,0x24,
0x5d03,0x26,
0x5d04,0x28,
0x5d05,0x2a,
0x5d06,0x2b,
0x5d07,0x2c,
0x5d08,0x2e,
0x5d09,0x30,
0x5d0a,0x32,
0x5d0b,0x33,
0x5d0c,0x35,
0x5d0d,0x36,
0x5d0e,0x38,
0x5d0f,0x3a,
0x5d10,0x3c,
0x5d11,0x3d,
0x5d12,0x3e,
0x5d13,0x40,

0x5d14,0x08,
0x5d15,0x08,
0x5d16,0x0c,
0x5d17,0x0c,
0x5d18,0x08,
0x5d19,0x08,
0x5d1a,0x04,
0x5d1b,0x04,
0x5d1c,0x01,
0x5d1d,0x01,
0x5d20,0x00,
0x5d21,0x20,
0x5d22,0x00,
0x5d23,0x50,

0x5d24,0x3a,
0x5d25,0xe0,
0x5d26,0x30,
0x5d27,0x32,
0x5d28,0x03,
0x5d29,0x8f,
0xfffe,0x14,
0x002b,0x01,
0xfffe,0x50,
0x0137,0x99,

0xfffe,0x30,
0x0000,0x47,
0x0001,0x82,
0x0002,0x96,
0x0003,0x35,
0x0004,0x10,
0x0013,0x04,
0x0014,0x00,
0x071c,0x0a,
0x071b,0x20,
0x0051,0x03, //ae 统计数据选择
0x0019,0x09,

0x1700,0x09,
0x1701,0x40,
0x1702,0x40,
0x1704,0x22,

0xfffe,0x30,
0x1451,0x03,
0x1452,0x50,
0x1453,0x20, 

0xfffe,0x14,
0x002b,0x01,
0x002c,0x01,  //isp1 awb_en
0x0030,0x01,  //isp1 lenc_en
0x0620,0x01,
0x0621,0x01,

0xfffe,0x26,
0x8010,0x0d,



//XC7022_Preview_end

};


//结束。
#endif
